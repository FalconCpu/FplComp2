package falcon

enum class TokenKind(val text:String, val lineContinues: Boolean) {
    EOF("<end of file>", false),
    EOL("<end of line>", true),
    INDENT("<indent>", true),
    DEDENT("<dedent>", true),
    IDENTIFIER("<identifier>", false),
    INT_LITERAL("<integer literal>", false),
    STRING_LITERAL("<string literal>", false),
    REAL_LITERAL("<real literal>", false),
    CHAR_LITERAL("<character literal>", false),
    PLUS("+", true),
    MINUS("-", true),
    STAR("*", true),
    SLASH("/", true),
    PERCENT("%", true),
    CARET("^", true),
    AMPERSAND("&", true),
    BAR("|", true),
    EQ("=", true),
    LT("<", true),
    GT(">", false),    // Bit of a hack here - cannot continue line as could be end of generic parameter
    LE("<=", true),
    GE(">=", true),
    NE("!=", true),
    PLUSEQ("+=", true),
    MINUSEQ("-=", true),
    STAREQ("*=", true),
    SLASHEQ("/=", true),
    COMMA(",", true),
    DOT(".", true),
    DOTDOT("..", true),
    DOTDOTDOT("...", true),
    COLON(":", true),
    ARROW("->", false),
    QUESTION("?", true),
    EMARK("!", true),
    DOUBLE_DOT("..", true),
    IN("in", true),
    TO("to", true),
    AND("and", true),
    OR("or", true),
    NEW("new",true),
    DELETE("delete", false),
    LOCAL("local",true),
    NOT("not", true),
    TILDE("~", true),
    LSL("lsl", true),
    LSR("lsr", true),
    ASR("asr", true),
    OPENB("(", true),
    OPENSQ("[", true),
    OPENCL("{", true),
    CLOSEB(")", false),
    CLOSESQ("]", false),
    CLOSECL("}", false),
    VAL("val", false),
    VAR("var", false),
    IF("if", false),
    THEN("then", true),
    ELSE("else", false),
    ELSIF("elsif", false),
    END("end", false),
    WHILE("while", false),
    FOR("for", false),
    REPEAT("repeat", false),
    UNTIL("until", false),
    BREAK("break", false),
    CONTINUE("continue", false),
    CONST("const", false),
    RETURN("return", false),
    FUN("fun", false),
    CLASS("class", false),
    WHEN("when", false),
    ENUM("enum", false),
    ARRAY("Array", false),
    VIRTUAL("virtual", false),
    OVERRIDE("override", false),
    ERROR("<error>", false);

    companion object {
        val textToKind = TokenKind.entries.associateBy { it.text }
    }
}